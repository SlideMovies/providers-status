import fs from 'fs';

// const checkLibgen = async (output: { output: string }) => {
//   const libgenSite = "http://libgen.rs/";
//   const libgenDownload = "http://62.182.86.140";

//   try {
//     const t0 = performance.now();
//     const { status } = await axios.get(libgenSite, { timeout: 3000 });
//     const t1 = performance.now();
//     output.output += `| Libgen | 游릴 ${status} | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`;

//     const t2 = performance.now();
//     let res = await axios.get(libgenDownload, { timeout: 3000 });
//     const t3 = performance.now();
//     output.output += `| Libgen Download | 游릴 ${res.status} | ${(t3 - t2) / 1000}s |\n`;

//     return output.output;
//   } catch (e: any) {
//     if (e?.config?.url == libgenDownload) {
//       output.output += `| Libgen Download | 游린 500 | 3s |\n`;
//     }
//   }
//   return output.output;
// };

// const checkGetComics = async (output: { output: string }) => {
//   const getComicsSite = "https://getcomics.info/";

//   try {
//     const t0 = performance.now();
//     const { status } = await axios.get(getComicsSite, { timeout: 3000 });
//     const t1 = performance.now();
//     output.output += `| GetComics | 游릴 ${status} | ${((t1 - t0) / 1000).toPrecision(3)}s |\n`;
//   } catch (e: any) {
//     output.output += `| GetComics | 游린 500 | 3s |\n`;
//   }
//   return output.output;
// };

const generateFile = async () => {
  const file = 'providers-list.json';
  const rawData = fs.readFileSync(file);
  const categories = JSON.parse(rawData.toString());

  let output =
    '/*GENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.*/\n\n\nimport {ANIME, BOOKS, MANGA, COMICS, LIGHT_NOVELS} from \'@consumet/extensions\'\nimport fs from "fs"\nimport {performance} from "perf_hooks"\n\n';
  output += 'const start = async() => {\n';
  output +=
    " let output = '| **provider** | **Status** | **Time** |\\n|:--------:|:------:|:----:|\\n'\n";
  output += ' let t0, t1 = performance.now()\n';
  for (const category of categories) {
    const k = Object.keys(category)[0];

    for (const provider of category[k]) {
      const className = provider.classPath.split('.').slice(-1)[0];
      let query = '';
      switch (className) {
        case 'NineAnime':
        case 'Gogoanime':
        case 'MangaDex':
        case 'ReadLightNovels':
          query = 'One Piece';
          break;
        case 'Libgen':
          query = 'One Hundred Years of Solitude';
          break;
        case 'GetComics':
          query = 'batman';
      }

      let inFile = '	const ' + className + ' = new ';
      inFile += provider.classPath;
      inFile += '()\n';
      inFile += ' try {\n';
      inFile += '	t0 = performance.now()\n';
      inFile += `	 const ${className}Res = await ${className}.search("${query}")\n`;
      inFile += '	 t1 = performance.now()\n';
      if (className == 'Libgen') {
        inFile += `	if (${className}Res){\n`;
        inFile += `		 output += \`${`| [\${${className}.name}](${provider.baseUrl}) | 游릭 200 | \${((t1 - t0) / 1000).toPrecision(3)}s |\\n\``}\n`;
        inFile += '	}\n';
        inFile += `	else {\n`;
        inFile += `		 output += \`${`| [\${${className}.name}](${provider.baseUrl}) | 游댮 500 | \${((t1 - t0) / 1000).toPrecision(3)}s |\\n\``}\n`;
        inFile += '	}\n';
      } else if (className == 'GetComics') {
        inFile += `	if (${className}Res.containers){\n`;
        inFile += `		 output += \`${`| [\${${className}.name}](${provider.baseUrl}) | 游릭 200 | \${((t1 - t0) / 1000).toPrecision(3)}s |\\n\``}\n`;
        inFile += '	}\n';
        inFile += `	else {\n`;
        inFile += `		 output += \`${`| [\${${className}.name}](${provider.baseUrl}) | 游댮 500 | \${((t1 - t0) / 1000).toPrecision(3)}s |\\n\``}\n`;
        inFile += '	}\n';
      } else {
        inFile += `	if (${className}Res.results){\n`;
        inFile += `		 output += \`${`| [\${${className}.name}](${provider.baseUrl}) | 游릭 200 | \${((t1 - t0) / 1000).toPrecision(3)}s |\\n\``}\n`;
        inFile += '	}\n';
        inFile += `	else {\n`;
        inFile += `		 output += \`${`| [\${${className}.name}](${provider.baseUrl}) | 游댮 500 | \${((t1 - t0) / 1000).toPrecision(3)}s |\\n\``}\n`;
        inFile += '	}\n';
      }

      inFile += '} catch (e) {\n';
      inFile += `	 output += \`${`| [\${${className}.name}](${provider.baseUrl}) | 游댮 500 | 0s |\\n\``}\n`;
      inFile += '	}';
      output += inFile + '\n';
    }
  }
  output += "fs.writeFileSync('./README.md', output)";
  output += '}';
  output += '\n\n\n\nstart()';

  fs.writeFileSync('./chore-generator.ts', output);
};

(async () => {
  await generateFile();
  //   let output = "# Provider Status\n";
  //   output += "| **provider** | **Status** | **Time** |\n|:--------:|:------:|:----:|\n";
  //   output = await checkLibgen({ output });
  //   output = await checkGetComics({ output });
  //   console.log(output);
  //   fs.writeFileSync("./README.md", output);
})();
